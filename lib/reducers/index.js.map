{"version":3,"sources":["../../src/reducers/index.js"],"names":["reducers","create","state","action","status","isCreating","items","body","fetch","isFetching","didInvalidate","lastUpdated","receivedAt","get","isFetchingItem","didInvalidateItem","actionOpts","options","item","update","assignResponse","updatedItems","listItemIndex","findIndex","el","id","splice","slice","lastUpdatedItem","isUpdating","context","updatedItem","delete","isDeleting","filter","createReducers","name","namespace","String","type","startsWith","substr","length","toLowerCase","initialState"],"mappings":"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","file":"index.js","sourcesContent":["\n// http://facebook.github.io/react/docs/update.html\n\nimport {/* defaultState, */initialState} from './../defaults';\nimport {getNamespace} from './../types';\n\nconst reducers = {\n  create: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Add object to store as soon as possible?\n        return {...state,\n          isCreating: true\n          // items: [{\n          //   id: state.items.reduce((maxId, obj) => Math.max(obj.id, maxId), -1) + 1,\n          //   ...action.context\n          // }, ...state.items]\n        };\n      case 'resolved':\n        // Assign returned object\n        return {...state,\n          isCreating: false,\n          items: [...state.items, action.body]\n        };\n      case 'rejected':\n        return {...state,\n          isCreating: false\n        };\n      default:\n        return state;\n    }\n  },\n  fetch: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {...state,\n          isFetching: true,\n          didInvalidate: false\n        };\n      case 'resolved':\n        return {...state,\n          isFetching: false,\n          didInvalidate: false,\n          items: action.body,\n          lastUpdated: action.receivedAt\n        };\n      case 'rejected':\n        return {...state,\n          isFetching: false,\n          didInvalidate: false\n        };\n      default:\n        return state;\n    }\n  },\n  get: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {...state,\n          isFetchingItem: true,\n          didInvalidateItem: false\n        };\n      case 'resolved': {\n        const actionOpts = action.options || {};\n        const item = action.body;\n        const update = {};\n        if (actionOpts.assignResponse) {\n          const updatedItems = state.items;\n          const listItemIndex = updatedItems.findIndex(el => el.id === item.id);\n          if (listItemIndex !== -1) {\n            updatedItems.splice(listItemIndex, 1, item);\n            update.items = updatedItems.slice();\n          }\n        }\n        return {...state,\n          isFetchingItem: false,\n          didInvalidateItem: false,\n          lastUpdatedItem: action.receivedAt,\n          item,\n          ...update\n        };\n      }\n      case 'rejected':\n        return {...state,\n          isFetchingItem: false,\n          didInvalidateItem: false\n        };\n      default:\n        return state;\n    }\n  },\n  update: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {...state,\n          isUpdating: true\n        };\n      case 'resolved': {\n        // Assign context or returned object\n        const id = action.context.id || action.context;\n        const actionOpts = action.options || {};\n        const update = actionOpts.assignResponse ? action.body : action.context;\n        const listItemIndex = state.items.findIndex(el => el.id === id);\n        const updatedItems = state.items;\n        if (listItemIndex !== -1) {\n          const updatedItem = {...state.items.splice(listItemIndex, 1)[0], ...update};\n          updatedItems.splice(listItemIndex, 0, updatedItem);\n        }\n        const updatedItem = state.item && state.item.id === id\n          ? {...state.item, ...update}\n          : state.item;\n        return {...state,\n          isUpdating: false,\n          items: listItemIndex !== -1 ? updatedItems.slice() : updatedItems,\n          item: updatedItem\n        };\n      }\n      case 'rejected':\n        return {...state,\n          isUpdating: false\n        };\n      default:\n        return state;\n    }\n  },\n  delete: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {...state,\n          isDeleting: true\n        };\n      case 'resolved': // eslint-disable-line\n        const id = action.context.id || action.context;\n        return {...state,\n          isDeleting: false,\n          items: [...state.items.filter(el => el.id !== id)]\n        };\n      case 'rejected':\n        return {...state,\n          isDeleting: false\n        };\n      default:\n        return state;\n    }\n  }\n};\n\nconst createReducers = ({name}) => {\n  const namespace = `${getNamespace({name})}/`;\n  // const localInitialState = {\n  //   ...Object.keys(defaultState).reduce((soFar, key) => ({...soFar, ...defaultState[key]}), {}),\n  //   ...initialState\n  // };\n  return (state = {...initialState, name}, action) => {\n    // Only process relevant namespace\n    if (!String(action.type).startsWith(namespace)) {\n      return state;\n    }\n    // Only process relevant action type\n    const type = action.type.substr(namespace.length).toLowerCase();\n    if (reducers[type]) {\n      return reducers[type](state, action);\n    }\n    return state;\n  };\n};\n\nexport {initialState, reducers, createReducers};\n"]}