{"version":3,"sources":["../../src/actions/index.js"],"names":["getActionName","name","pluralName","actionKey","actionOpts","actualPluralName","isArray","createActions","defaultUrl","url","actions","credentials","Object","keys","reduce","actionFuncs","action","reducerOpts","type","actionUrl","actionName","actionFunc","context","contextOpts","dispatch","getState","status","urlParams","fetchUrl","dynamicOpts","forEach","key","fetchOptions","assign","then","transformResponse","options","receivedAt","Date","now","payload","catch","err","statusCode","code","body"],"mappings":"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","file":"index.js","sourcesContent":["// @inspiration https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js\n\nimport {getActionType} from './../types';\nimport {applyTransformPipeline, buildTransformPipeline} from './transform';\nimport {parseUrlParams} from './../helpers/url';\nimport fetch, {buildFetchUrl, buildFetchOpts} from './../helpers/fetch';\nimport {pick, ucfirst} from './../helpers/util';\n\nimport {defaultTransformResponsePipeline} from './../defaults';\n// const d = ::console.info;\n\nconst getActionName = ({name, pluralName, actionKey, actionOpts = {}}) => {\n  const actualPluralName = pluralName || `${name}s`;\n  return `${actionKey}${ucfirst(actionOpts.isArray ? actualPluralName : name)}`;\n};\n\nconst createActions = ({name, pluralName, url: defaultUrl, actions = {}, credentials}) => (\n  Object.keys(actions).reduce((actionFuncs, actionKey) => {\n    const action = actions[actionKey];\n    const actionOpts = {...actions[actionKey], credentials};\n    const reducerOpts = pick(actionOpts, 'assignResponse');\n    const type = getActionType({name, action, actionKey});\n    const actionUrl = action.url || defaultUrl;\n    // Compute actual function name\n    const actionName = getActionName({name, pluralName, actionKey, actionOpts});\n    // Actual action function\n    const actionFunc = (context, contextOpts = {}) => (dispatch, getState) => {\n      // First dispatch a pending action\n      dispatch({type, status: 'pending', context});\n      let url = actionUrl;\n      if (typeof actionUrl === 'function') { url = actionUrl(getState); }\n      const urlParams = parseUrlParams(url);\n      const fetchUrl = buildFetchUrl({url, urlParams, context, contextOpts});\n      const dynamicOpts = {};\n      Object.keys(actionOpts).forEach((key) => {\n        if (typeof actionOpts[key] === 'function') {\n          dynamicOpts[key] = actionOpts[key](getState);\n        }\n      });\n      const fetchOptions = buildFetchOpts({context, contextOpts, actionOpts: Object.assign({}, actionOpts, dynamicOpts)});\n      // d(`${name}Actions.${actionName}()`, fetchUrl, fetchOptions);\n      return fetch(fetchUrl, fetchOptions)\n        .then(applyTransformPipeline(buildTransformPipeline(defaultTransformResponsePipeline, actionOpts.transformResponse)))\n        .then(payload => dispatch({type, status: 'resolved', context, options: reducerOpts, receivedAt: Date.now(), ...payload}))\n        .catch((err) => {\n          // Catch HttpErrors\n          if (err.statusCode) {\n            dispatch({type, status: 'rejected', code: err.statusCode, body: err.body, context, options: reducerOpts, receivedAt: Date.now()});\n          // Catch regular Errors\n          } else {\n            dispatch({type, status: 'rejected', context, options: reducerOpts, err, receivedAt: Date.now()});\n          }\n          throw err;\n        });\n    };\n    return {...actionFuncs, [actionName]: actionFunc};\n  }, {})\n);\n\nexport {getActionName, createActions};\n"]}